{
  // Editor
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "editor.fontFamily": "Comic Mono, Hack Nerd Font Mono, Monaco, 'Courier New', monospace",
  "editor.fontSize": 16,
  "editor.wordWrap": "on",
  "editor.autoClosingBrackets": "always",
  "editor.rulers": [99],
  "editor.lineNumbers": "on",
  "terminal.integrated.fontWeightBold": "normal",
  "terminal.integrated.fontWeight": "normal",
  "settingsSync.ignoredExtensions": [],
  "editor.formatOnSave": true,

  // Terminal
  "terminal.integrated.fontFamily": "Comic Mono, Hack Nerd Font Mono",
  "terminal.integrated.fontSize": 16,

  // Notebook
  "notebook.codeActionsOnSave": {
    "notebook.source.fixAll": true,
    "notebook.source.organizeImports": true
  },

  // Language specific config
  // Python
  "[python]": {
    "editor.semanticHighlighting.enabled": false,
    "editor.defaultFormatter": "ms-python.black-formatter"
  },

  "editor.codeActionsOnSave": {
    "source.fixAll": "never",
    "source.organizeImports": "always"
  },

  // C-Cpp-Cmake
  "cmake.configureOnOpen": false,
  "cmake.automaticReconfigure": false,
  "cmake.configureOnEdit": false,
  "C_Cpp.intelliSenseEngine": "default",

  // Etc
  "autoDocstring.docstringFormat": "numpy",
  "black-formatter.args": ["--line-length", "99"],
  "pylint.args": ["--max-line-length=99", "--disable=E1120,C0116,C0114,C0115"],
  "isort.args": [
    "--profile",
    "black",
    "--filter-files",
    "--force-grid-wrap",
    "3",
    "--keep-unused"
  ],
  "gitlens.graph.layout": "editor",
  "ruff.organizeImports": false,

  // VSpaceCode
  "vim.easymotion": true,
  "vim.useSystemClipboard": true,
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": ["<space>"],
      "commands": ["vspacecode.space"]
    },
    {
      "before": [","],
      "commands": [
        "vspacecode.space",
        {
          "command": "whichkey.triggerKey",
          "args": "m"
        }
      ]
    }
  ],
  "vim.visualModeKeyBindingsNonRecursive": [
    {
      "before": ["<space>"],
      "commands": ["vspacecode.space"]
    },
    {
      "before": [","],
      "commands": [
        "vspacecode.space",
        {
          "command": "whichkey.triggerKey",
          "args": "m"
        }
      ]
    },
    {
      "before": [">"],
      "commands": ["editor.action.indentLines"]
    },
    {
      "before": ["<"],
      "commands": ["editor.action.outdentLines"]
    }
  ],

  // Sync-Rsync
  "sync-rsync.sites": [
    {
      "localPath": "/Users/pytholic/Developer/personal/Projects/mlops/mlops-orbit",
      "remotePath": "pytholic@34.64.207.252:/home/pytholic/mlops-zoomcamp-pytholic",
      "shell": "ssh -i ~/.ssh/mlops-zoomcamp"
    },
    {
      "localPath": "/Users/lunit_haseebraja/Developer/work/insight-engine",
      "remotePath": "pytholic@10.110.0.113:/lunit/home/pytholic/workspace/insight-engine",
      "shell": "ssh -i ~/.ssh/id_rsa"
    },
    {
      "localPath": "/Users/lunit_haseebraja/Developer/work/insight-inference-postprocess",
      "remotePath": "pytholic@10.110.0.113:/lunit/home/pytholic/workspace/insight-inference-postprocess",
      "shell": "ssh -i ~/.ssh/id_rsa"
    },
    {
      "localPath": "/Users/lunit_haseebraja/Developer/work/research-cs-gc",
      "remotePath": "pytholic@10.110.0.113:/lunit/home/pytholic/workspace/research-cs-gc",
      "shell": "ssh -i ~/.ssh/id_rsa"
    },
    {
      "localPath": "/Users/lunit_haseebraja/Developer/work/internal-validation",
      "remotePath": "pytholic@10.110.0.113:/lunit/home/pytholic/workspace/internal-validation",
      "shell": "ssh -i ~/.ssh/id_rsa",
      "exclude": [".git", ".vscode", "rdp_results/", "*.json"]
    },
    {
      "localPath": "/Users/lunit_haseebraja/Developer/personal/ml/nlp/llm_litgpt",
      "remotePath": "pytholic@10.110.0.113:/lunit/home/pytholic/personal/llm/llm_litgpt",
      "shell": "ssh -i ~/.ssh/id_rsa",
      "exclude": [".git", ".vscode", "checkpoints/", ".venv/", ".cache/"]
    },
    {
      "localPath": "/Users/lunit_haseebraja/Developer/personal/ml/nlp/llm_SmolLM",
      "remotePath": "pytholic@10.110.0.113:/lunit/home/pytholic/personal/llm/llm_SmolLM",
      "shell": "ssh -i ~/.ssh/id_rsa",
      "exclude": [
        ".git",
        ".vscode",
        ".venv/",
        ".cache/",
        "poetry.lock",
        "*.pth"
      ]
    },
    {
      "localPath": "/Users/lunit_haseebraja/Developer/personal/ml/nlp/llm_from_sratch",
      "remotePath": "pytholic@10.110.0.113:/lunit/home/pytholic/personal/llm/llm_from_scratch",
      "shell": "ssh -i ~/.ssh/id_rsa",
      "exclude": [
        ".git",
        ".vscode",
        "checkpoints/",
        ".venv/",
        "./gpt2/",
        "./archive/"
      ]
    }
  ],
  "sync-rsync.include": [".vscode", ".git"],
  "sync-rsync.exclude": [".venv"],
  // "sync-rsync.args": [
  //   "--rsh=ssh"
  // ],
  "sync-rsync.executableShell": "/bin/bash",
  // "sync-rsync.onSaveIndividual": true,
  // "sync-rsync.onSave": true,
  "sync-rsync.delete": true,
  "remote.autoForwardPortsSource": "hybrid",

  // TODO Tree
  "todo-tree.general.tags": ["TODO", "FIXME", "BUG", "HACK"],
  "todo-tree.highlights.backgroundColourScheme": [
    "orange",
    "#FF8096",
    "green",
    "#89CFF0"
  ],
  "todo-tree.highlights.useColourScheme": true,
  "todo-tree.highlights.customHighlight": {
    "TODO": {
      "gutterIcon": true
    },
    "FIXME": {
      "foreground": "white",
      "iconColour": "yellow",
      "gutterIcon": true
    },
    "BUG": {
      "icon": "bug",
      "foreground": "white",
      "gutterIcon": true
    },
    "HACK": {
      "icon": "checkbox",
      "foreground": "white",
      "gutterIcon": true
    }
  },
  "notebook.lineNumbers": "on",
  "editor.semanticHighlighting.enabled": true,
  "terminal.integrated.minimumContrastRatio": 1,
  "workbench.iconTheme": "material-icon-theme",
  "workbench.colorTheme": "Nord",
  "githubPullRequests.fileListLayout": "flat",
  "rust-analyzer.inlayHints.typeHints.enable": false,
  "rust-analyzer.inlayHints.chainingHints.enable": false,
  "rust-analyzer.inlayHints.parameterHints.enable": false,
  "rust-analyzer.inlayHints.closingBraceHints.enable": false,
  "githubPullRequests.pullBranch": "never",
  "[makefile]": {
    "editor.insertSpaces": false
  }
}
